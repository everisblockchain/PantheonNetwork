---
- name: initializing constellation
  debug:
    msg: initializing constellation

- name: get public ip
  shell: dig +short myip.opendns.com @resolver1.opendns.com 2>/dev/null || curl -s --retry 2 icanhazip.com
  register: node_ip

- name: create orion directories
  file:
    path: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    state: directory
  with_items:
    - { dest: "~/lacchain/orion", mode: "0440" }
    - { dest: "~/lacchain/orion/keystore", mode: "0440" }
    - { dest: "~/lacchain/orion/certificates", mode: "0440" }
    - { dest: "~/lacchain/orion/certificates/CAs", mode: "0440" }

- name: copy password to file
  copy:
    dest: ~/lacchain/tmp/.account_pass
    content: |
      {{password}}

- name: generate configuration openssl file
  template:
    src: "openssl.j2"
    dest: "~/lacchain/orion/openssl.cnf"
    force: yes

- name: generating CA Key
  shell: openssl genrsa -out orion_ca.key 2048
  args:
    chdir: ~/lacchain/orion/certificates

- name: generating CA Certificate
  shell: openssl req -x509 -new -nodes -key /root/lacchain/orion/certificates/orion_ca.key -sha256 -days 1024 -out orion_ca.pem -subj "/C=US/ST=Washington/L=Seatle/O=Lacchain/OU=Network/CN=Lacchain CA"
  args:
    chdir: ~/lacchain/orion/certificates

- name: generating Orion Certificate Key  
  shell: openssl genrsa -out orion_cer.key 2048
  args:
    chdir: ~/lacchain/orion/certificates
    
- name: generating Certificate Signig Request
  shell: openssl req -new -key /root/lacchain/orion/certificates/orion_cer.key -out orion_cer.csr -subj "/C=US/ST=Washington/L=Seatle/O=Lacchain/OU=Network/CN={{dns_name}}" -config /root/lacchain/orion/openssl.cnf
  args:
    chdir: ~/lacchain/orion/certificates

- name: Signing CSR using CA key
  shell: openssl x509 -req -in /root/lacchain/orion/certificates/orion_cer.csr -CA /root/lacchain/orion/certificates/orion_ca.pem -CAkey /root/lacchain/orion/certificates/orion_ca.key -CAcreateserial -out orion_cer.pem -days 500 -sha256 -extfile /root/lacchain/orion/openssl.cnf -extensions v3_req
  args:
    chdir: ~/lacchain/orion/certificates

#- name: Copy constellation nodes file
#  copy:
#      src: "{{ role_path }}/files/constellation-nodes.json"
#      dest: ~/lacchain/tmp/constellation-nodes.json
#      mode: 0755

#- name: update constellation node files
#  replace:
#      path: ~/lacchain/tmp/constellation-nodes.json
#      regexp: '9000/"$'
#      replace: '9000/",'

#- name: update constellation nodes file
#  lineinfile:
#      path: ~/lacchain/tmp/constellation-nodes.json
#      regexp: "$]$"
#      insertbefore: "^]$"
#      line: '    "https://{{node_ip.stdout}}:9000/"'

#- name: Fetch constellation_nodes updated
#  fetch:
#      src: ~/lacchain/tmp/constellation-nodes.json
#      dest: "{{ role_path }}/files/"
#      flat: yes

- name: generate configuration orion file
  template:
    src: "orion.j2"
    dest: "~/lacchain/orion/orion.conf"
    force: yes

- name: generate pair keys
  shell: cat ~/lacchain/tmp/.account_pass | orion --generatekeys nodeKey
  args:
    chdir: ~/lacchain/orion/keystore

- name: Generate shell script to execute orion service
  template:
    src: "startorion.j2"
    dest: "~/lacchain/start-orion.sh"
    mode: 0775
    force: yes

- name: Copy service file to systemd
  copy:
    src: "{{ role_path }}/files/orion.service"
    dest: /lib/systemd/system/orion.service
    mode: 0775

- name: Enable service orion
  service:
    name: orion
    enabled: yes
